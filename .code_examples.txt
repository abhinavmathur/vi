<% res = Amazon::Ecs.item_lookup('0804139296', {response_group: 'Medium, BrowseNodes'}) %>




<br>
<br>

<% varr = res.get_elements('Feature') %>
<% unless varr.nil? %>
    <% p varr.each do |qqqqqq| %>
        <%= p qqqqqq.inspect %>
    <% end %>
<% end %>

<% #res.get_elements('Feature').marshal_dump %>
<%# Amazon::Ecs.browse_node_lookup("34").marshal_dump %>
<% qqq = res.get_elements('BrowseNode') %>
<% arr = [] %>
<% qqq.each do |node| %>
    <%= node.get('Name') %>
    <%= node.get('IsCategoryRoot') %>
    <% arr.push(node.get('Name')) %>
    <% arr.push(node.get('IsCategoryRoot')) unless node.get('IsCategoryRoot').blank? %>
    <br>
<% end %>
====
<%= arr[arr.index('1') + 1].to_s %>
=====
<% nodes =  res.get_element('BrowseNodes')%>

<%= nodes.get_element('BrowseNodeId') %>
<%= res.get_element('IsEligibleForPrime') %>
----
<br>
<br>
<%= res.get_element('ASIN').to_s.html_safe %>
<br>
<%  item_attributes = res.get_element('ItemAttributes') %>
<br>
<p>List price</p>
<%= item_attributes.get('ListPrice') %>
<br>
<p>label</p>
<%= item_attributes.get('Label') %>
<br>
<p>product group</p>
<%= item_attributes.get('ProductGroup') %>
................
<br>
<p>subcategory</p>
<%= item_attributes.get('ProductTypeSubcategory') %>
<br>
<br>
<%= res.get_element('Content').to_s.html_safe %>

<% eee =  res.get_elements('LargeImage/URL')%>
<% eee.each do |image| %>
    <%= raw image %>
<% end %>








<ul class="collection">
  <li><%= link_to 'Manage Categories', admin_categories_path %></li>
  <li class="collection-item">Alvin</li>
  <li class="collection-item">Alvin</li>
  <li class="collection-item">Alvin</li>
  <li class="collection-item">Alvin</li>
</ul>

---------devise sign in code-----
<%= simple_form_for(resource, as: resource_name, url: registration_path(resource_name)) do |f| %>
  <%= f.error_notification %>

  <div class="form-inputs">
    <%= f.input :email, required: true, autofocus: true %>
    <%= f.input :password, required: true, hint: ("#{@minimum_password_length} characters minimum" if @minimum_password_length) %>
    <%= f.input :password_confirmation, required: true %>
  </div>

  <div class="form-actions">
    <%= f.button :submit, "Sign up" %>
  </div>
<% end %>

<%= render "devise/shared/links" %>


-----------------review create----------------------
def create
    @product
    product_id = params[:product_id].to_i

    if Product.exists?(id: product_id)
      @product = Product.find_by(id: product_id)
    else
      flash[:error] = 'Wrong product ID supplied'
      redirect_to root_path
    end
    if Review.youtube_video_belongs_to_user?(current_user, params[:review][:youtube_url]) && params[:review][:youtube_url].present?
      @review = @product.reviews.create(review_params)
      @review.reviewer_id = current_user.id
      if @review.save
        flash[:notice] = 'Review was created successfully'
        redirect_to review_path(@review) and return
      else
        flash[:error] = @review.errors.full_messages.to_sentence
        redirect_to new_review_path(product_id: product_id)
      end
    else
      flash[:danger] = 'The YouTube video ID supplied does not belong to your YouTube account'
      redirect_to new_review_path(product_id: product_id)
    end
    @review = @product.reviews.create(review_params)
    @review.reviewer_id = current_user.id
    if @review.save
      flash[:notice] = 'Review was created successfully'
      redirect_to review_path(@review) and return
    else
      flash[:error] = @review.errors.full_messages.to_sentence
      redirect_to new_review_path(product_id: product_id)
    end
  end