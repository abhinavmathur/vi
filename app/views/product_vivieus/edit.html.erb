<div class="row">
  <!--Review form-->
  <div class="col s12 m8 l8">
    <h2>Review details</h2>

    <div id="review-error-messages">

    </div>

    <%= form_for @product_vivieu, html: { class: 'review-form'}, url: "/product_vivieus/#{@product_vivieu.id}", remote: true do |f| %>
        <div class="row">
          <div class="col s12 input-field">
            <%= f.text_field :title, required: true, data: {validation: 'required'} %>
            <%= f.label :title %>
          </div>
        </div>

        <div class="row">
          <div class="col s12 input-field">
            <%= f.text_area :description, data: {validation: 'required'}, class: 'materialize-textarea' %>
            <%= f.label :description %>
          </div>
        </div>

        <div class="row">
          <div class="col s12 input-field">
            <%= f.text_field :tags, data: {validation: 'required'} %>
            <%= f.label :tags %>
          </div>
        </div>

        <div class="row">
          <div class="col s12 input-field">
            <%= f.text_field :youtube_url %>
            <%= f.label :youtube_url, 'YouTube Video ID' %>
          </div>
        </div>

        <div class="row">
          <div class="col s12 input-field">
            <a class="modal-trigger-youtube waves-effect waves-light btn youtube-button" href="#youtube-videos-modal">Modal</a>
          </div>
        </div>



        <div class="row">
          <div class="col s12 input-field">
            <%= f.text_field :affiliate_link %>
            <%= f.label :affiliate_link,
                        'Your affiliate link goes here', placeholder: 'http://',
                        data: { validation: 'url',
                                error: 'Must be a valid link',
                                suggestion: 'Should start with http or https'} %>
          </div>
        </div>

        <div class="row">
          <div class="col s12 input-field">
            <%= f.text_field :affiliate_tag %>
            <%= f.label :affiliate_tag %>
          </div>
        </div>

        <div class="row">
          <div class="col s12 input-field">
            <%= f.submit 'Save' %>
          </div>
        </div>
    <% end %>
    <div class="row">
      <div class="col s12 publish-buttons">
        <% if @product_vivieu.publish? %>
            <%= link_to 'Unpublish Review', unpublish_product_vivieu_path(@product_vivieu), method: :patch, class: 'waves-effect waves-light red white-text btn' %>
        <% else %>
            <a class="waves-effect waves-light btn publish_review_form" onclick="publish_review_form()">Publish</a>
        <% end %>
      </div>
    </div>
  </div>

  <!--Product form-->
  <div class="col s12 m4 l4">
    <div class="product-card">
      <% if @product_vivieu.reviewfiable.present? %>
          <%= render partial: 'product_vivieus/partials/existing_product_card', locals: { product: @product_vivieu.reviewfiable} %>
      <% else %>
          <%= render partial: 'product_vivieus/partials/product_form', locals: { product: @product_vivieu.reviewfiable} %>
      <% end %>

    </div>

    <div class="row">
      <div class="col s12 amazon-ads-action">
        <% if @product_vivieu.amazon_ad.nil? %>
            <%= link_to 'Create ads', new_product_vivieu_amazon_ad_path(@product_vivieu), remote: true, data: {disable_with: 'Loading...'} %>
        <% else %>
            <%= link_to 'Show Ad', product_vivieu_amazon_ad_path(@product_vivieu, @product_vivieu.amazon_ad), remote: true %>
            <%= link_to 'Edit Ad', edit_product_vivieu_amazon_ad_path(@product_vivieu, @product_vivieu.amazon_ad), remote: true, data: {disable_with: 'Loading...'} %>
            <%= link_to 'Delete Ad', product_vivieu_amazon_ad_path(@product_vivieu, @product_vivieu.amazon_ad), remote: true, method: :delete, data: { disable_with: 'Deleting...'} %>
        <% end %>
      </div>
    </div>


    <div class="row">
      <div class="col s12">
        <% user = User.find(@product_vivieu.reviewer_id) %>
        <% if GeoLink.check_errors(@product_vivieu, user ) == 'None' %>
            <% links = GeoLink.construct_links_for(@product_vivieu) %>
            <% links.each do |key, value| %>
                <div class="global-link-card" data-country="<%= key %>" style="border: 1px solid red;">
                  <a href="<%= value %>" data-card-controls="0" class="embedly-card"></a>
                </div>
            <% end %>
        <% else %>
            <p>
              <%= GeoLink.check_errors(@product_vivieu, user ) %>
            </p>
        <% end %>
      </div>
    </div>
  </div>

  <div class="append-modal">

  </div>

  <div id="amazon-modal" class="modal">
    <div class="modal-content">
      <%= render partial: 'product_vivieus/partials/amazon_product_form', locals: { id: @product_vivieu.id} %>
    </div>
  </div>
</div>

<script type="text/javascript" charset="utf-8">

  $('#hello').on('click', function()
  {
    if($('#hello').prop('checked')) {
      alert('checked');
    }
    else
    {
      alert('unchecked');
    }

  });

  $(".youtube-button").on('click', function(){
    $('.append-modal').html("<%= j render partial: 'product_vivieus/partials/youtube_modal',
       locals: { product_vivieu: @product_vivieu } %>")

  });

  $('.modal-trigger-youtube').leanModal({
    ready: function () {
      $.ajax({
        url: '/product_vivieus/<%= @product_vivieu.id %>/youtube_videos',
        dataType: 'json',
        method: 'GET',
        beforeSend: function() {
          $('.youtube-videos').html('<h3 class="flow-text center">Videos loading ...</h3>');
        },
        success: function (data) {
          $('.youtube-videos').empty().append('<input type="text" class="text-input" placeholder="Filter results" id="filter" value="" />');
          for(var i = 0; i < data.youtube_videos.length; i++)
          {
            $('.youtube-videos').append("<li class='titles flow-text' data-id='"+ data.youtube_videos[i].id +"'>"+ data.youtube_videos[i].title +"<span class='badge badge-click blue white-text' data-badge-caption=''>Add</span></li>");
          }
          live_search();
          badge_click();
        },
        timeout: 15000,
        error: function(jqXHR, textStatus, errorThrown) {
          if(textStatus==="timeout") {
            $('.youtube-videos').empty().append('<h3 class="flow-text center red">Looks like there was a connection timeout.' +
                ' Try again or put the YouTube ID manually'+'</h3>');
          }
        }
      });
    }
  });

  function live_search(){
    $("#filter").keyup(function(){
      // Retrieve the input field text and reset the count to zero
      var filter = $(this).val(), count = 0;

      // Loop through the comment list
      $(".titles").each(function(){

        // If the list item does not contain the text phrase fade it out
        if ($(this).text().search(new RegExp(filter, "i")) < 0) {
          $(this).fadeOut();

          // Show the list item if the phrase matches and increase the count by 1
        } else {
          $(this).show();
          count++;
        }
      });

      // Update the count
      var numberItems = count;
      $("#filter-count").text("Number of Comments = "+count);
    });
  }

  function badge_click()
  {
    $('.badge-click').css('cursor', 'pointer');
    $('.badge-click').on('click', function(){
      $('#review_youtube_url').val($(this).parent().data('id'))
      Materialize.updateTextFields();
      $('#youtube-videos-modal').closeModal();
    });
  }

</script>
<script type="text/javascript" charset="utf-8">
  function search_script()
  {
    var products = new Bloodhound({
      datumTokenizer: Bloodhound.tokenizers.obj.whitespace,
      queryTokenizer: Bloodhound.tokenizers.whitespace,
      remote: {
        url: 'http://localhost:3000/product_vivieus/autocomplete?query=%QUERY',
        wildcard: '%QUERY'
      }
    });

    products.initialize();

    $('#query').materialtags({
      maxTags: 1,
      itemValue: 'id',
      itemText: 'title',
      typeaheadjs: {
        hint: true,
        highlight: true,
        minLength: 1,
        name: 'title',
        displayKey: 'title',
        source: products.ttAdapter()
      }
    });
    $('#query').on('itemAdded', function(event) {
      $('.add-button-insert').html('<a class="waves-effect waves-light add-product-btn btn" onclick="add_product()">Add Product</a>');
    });
    $('#query').on('itemRemoved', function(event) {
      $('.add-button-insert').empty();
    });
  }

  search_script();


  function add_product(){
    var product_id = $('#query').val();
    $.ajax({
      method: 'POST',
      url: "http://localhost:3000/product_vivieus/<%= @product_vivieu.id %>/add_product",
      data: { product_id: product_id },
      success: function(data){
        var product_array = [];
        product_array.push('<div class="card-panel teal"><span>')
        product_array.push('<h2 class="center">'+ data.title +'</h2>')
        var first_image = data.product_images.split(',')[0];
        product_array.push('<img class="responsive-img" src="'+ first_image +'">');
        product_array.push('<a class="waves-effect waves-light red btn" onclick="show_product_form()">Wrong Product ?</a>')
        product_array.push('</span></div>');
        $('.product-card').fadeOut(1000, function(){
          var card = product_array.join('');
          $(this).html(card).fadeIn();
        })
      },
      error: function(data){
        console.log(data)
      }
    })
  }

  function show_product_form()
  {
    $('.product-card').fadeOut(200, function(){
      $(this).html('<%= j render partial: 'product_vivieus/partials/product_form', locals: { product: @product_vivieu.reviewfiable} %>').fadeIn(500);
      search_script();
    })
  }

  function amazon_modal()
  {
    $('#amazon-modal').openModal();
  }

  function close_amazon_modal()
  {
    $('#amazon-modal').closeModal();
  }

  function save_form()
  {
    var valuesToSubmit = $('.review-form').serialize();
    $.ajax({
      method: 'put',
      url: 'http://localhost:3000/product_vivieus/<%= @product_vivieu.id %>/autosave_form',
      data: valuesToSubmit,
      success: function(){
        toastr.success('Review saved', 'Success !')
      }
    })
  }

  function publish_review_form() {
    var valuesToSubmit = $('.review-form').serialize();
    $.ajax({
      method: 'POST',
      url: 'http://localhost:3000/product_vivieus/<%= @product_vivieu.id %>/publish',
      data:  valuesToSubmit ,
      beforeSend: function(){
        $('.publish_review_form').text('Publishing...')
      },
      success: function(){
        toastr.success('Your review is now live !', 'Success')
        $('.publish-buttons').fadeOut(200, function () {
          $(this).html('<%= link_to 'Unpublish Review', unpublish_product_vivieu_path(@product_vivieu), method: :post %>').fadeIn(200)
        })
      },
      error: function(jqXHR, textStatus, errorThrown){
        $('.publish_review_form').text('Publish')
        if(textStatus==="timeout") {
          toastr.error('Please check your internet connection or try again','Error')
        }
        else {
          var errors = ['<ol>'];
          var error_array = jqXHR.responseText.substring(1, jqXHR.responseText.length - 1).split(',')
          for(var i = 0; i < error_array.length; i++)
          {
            errors.push('<li>'+ error_array[i] +'</li>')
          }
          $('#review-error-messages').html(errors.join(''))
          toastr.error('Please check for errors in the error panel','Error')
        }
      },
      timeout: 10000
    })
  }






</script>