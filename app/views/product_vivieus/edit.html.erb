<div class="row">
  <!--Review form-->
  <!-- scroll-spy-menu -->

  <div class="col s12 m10 l10">
    <div class="card section scrollspy" id="review">
      <div class="card-content">
        <h3 class="center">Product review form</h3>
        <div id="review-error-messages">
        </div>

        <%= form_for @product_vivieu, html: { class: 'review-form'}, url: "/product_vivieus/#{@product_vivieu.id}", remote: true do |f| %>
        <div class="row">
          <div class="col s6 m6 l6">
            <span class="card-title">Review Info</span>

            <div class="input-field">
              <i class="material-icons prefix">title</i>
              <%= f.text_field :title, required: true, data: {validation: 'required'} %>
              <%= f.label :title%>
            </div>
            <div class="input-field">
              <i class="material-icons prefix">description</i>
              <%= f.text_area :description, data: {validation: 'required'}, class: 'materialize-textarea' %>
              <%= f.label :description %>
            </div>
            <div class="input-field">
              <i class="material-icons prefix">label</i>
              <%= f.text_field :tags, data: {validation: 'required'} %>
              <%= f.label :tags %>
            </div>
            <div class="affiliate-area">
              <span class="card-title">Select your affiliate program</span>
              <p>
                <%= f.radio_button :title, 'amazon' %>
                <%= f.label :title, 'Amazon affiliate' %>
              </p>
              <p>
                <%= f.radio_button :title, 'other' %>
                <%= f.label :title, 'Other affiliate' %>
              </p>
            </div>


          </div>

          <div class="col s6 m6 l6 ">
            <div class="youtube-add-panel center">
              <h5>Insert Video Here</h5>
              <a class="modal-trigger-youtube waves-effect waves-light btn-floating youtube-button" href="#youtube-videos-modal"><i class="material-icons">add</i></a>
            </div>
          </div>
        </div>
      </div>
    </div>

    <div class="card section scrollspy" id="product">
      <div class="card-content">
        <div class="row">
          <div class="col s6">
            <span class="card-title">Search for a product to review</span>
            <p>
              <%= radio_button_tag :title, 'title' %>
              <%= label_tag :title, 'Search for a product in our database' %>
            </p>
            <p>
              <%= radio_button_tag :title, 'title' %>
              <%= label_tag :title, 'Get from Amazon' %>
            </p>
            <p>
              <%= radio_button_tag :title, 'title' %>
              <%= label_tag :title, 'Add a custom product' %>
            </p>
          </div>
          <div class="col s6">
            <div class="product-add-panel center">
              <h5>Product preview here</h5>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div class="card section scrollspy" id="create-ads">
      <div class="card-content center">
        <div class="amazon-ads-action">
          <span class="card-title">Create an Ad</span>
          <br>

          <% if @product_vivieu.amazon_ad.nil? %>
          <div class="row">
            <div class="col s6">
              <div class="create-ad-panel">
                <span class="card-title">Add your ad here</span>
                <br>
                <%= link_to new_product_vivieu_amazon_ad_path(@product_vivieu), remote: true, data: {disable_with: 'Loading...'}, class: 'btn-floating' do %><i class="material-icons">add</i><% end %>
              </div>
            </div>
            <div class="col s6">
              <div class="create-ad-panel">
                <span class="card-title">Add your ad here</span>
                <br>
                <%= link_to new_product_vivieu_amazon_ad_path(@product_vivieu), remote: true, data: {disable_with: 'Loading...'}, class: 'btn-floating' do %><i class="material-icons">add</i><% end %>
              </div>
            </div>
          </div>
          <% else %>
          <%= link_to 'Show Ad', product_vivieu_amazon_ad_path(@product_vivieu, @product_vivieu.amazon_ad), remote: true %>
          <%= link_to 'Edit Ad', edit_product_vivieu_amazon_ad_path(@product_vivieu, @product_vivieu.amazon_ad), remote: true, data: {disable_with: 'Loading...'} %>
          <%= link_to 'Delete Ad', product_vivieu_amazon_ad_path(@product_vivieu, @product_vivieu.amazon_ad), remote: true, method: :delete, data: { disable_with: 'Deleting...'} %>
          <% end %>
        </div>
      </div>
    </div>
    <div class="global-links">
      <div class="card section scrollspy" id="global-links">
        <div class="card-content">
          <span class="card-title">Global Links</span>
          <% if @product_vivieu.reviewfiable.present? && @product_vivieu.reviewfiable.asin.present? %>
          <p class="flow-text center">Global links</p>
          <% user = User.find(@product_vivieu.reviewer_id) %>
          <% main_image = @product_vivieu.reviewfiable.product_images.split(',').first %>
          <% if GeoLink.check_errors(@product_vivieu, user ) == 'None' %>
          <% links = GeoLink.construct_links_for(@product_vivieu) %>
          <% links.each do |key, value| %>
          <p>Country: <%= key %></p>
          <div class="<%= key %>-display-card" style="border: 1px solid red;">
            <a href="<%= value %>" data-card-controls="0" data-card-image="<%= main_image %>" class="embedly-card"></a>
          </div>
          <% end %>
          <% else %>
          <p>
            <%= GeoLink.check_errors(@product_vivieu, user ) %>
          </p>
          <% end %>
          <% else %>
          <p class="flow-text center">Global Links is not applicable for non-Amazon products</p>
          <% end %>
        </div>
      </div>
    </div>
  </div>
  <div class="col s2 l2 hide-on-small-only">
    <div class="contents-wrapper">
      <ul class="section table-of-contents">
        <li><a href="#review">Review info</a></li>
        <li><a href="#product">Add a product</a></li>
        <li><a href="#create-ads">Create Ads</a></li>
        <li><a href="#global-links">Global links</a></li>
      </ul>
      <a class="btn blue">Save as draft</a>
      <div class="publish-buttons">
        <% if @product_vivieu.publish? %>
        <%= link_to 'Unpublish Review', unpublish_product_vivieu_path(@product_vivieu), method: :patch, class: 'waves-effect waves-light red white-text btn' %>
        <% else %>
        <a class="waves-effect waves-light btn publish_review_form" onclick="publish_review_form()">Publish</a>
        <% end %>
      </div>
      <div class="errors card red">
        <div class="card-content">
        <ul class='white-text'>
          <li>1 long long crazy error</li>
          <li>1 crazy error</li>
          <li>1 crazy error</li>
          <li>1 crazy error</li>
          <li>1 crazy error</li>
          <li>1 crazy error</li>
        </ul>
      </div>
    </div>
    </div>

  </div>
<!-- <div class="product-card">
  <% if @product_vivieu.reviewfiable.present? %>
      <%= render partial: 'product_vivieus/partials/existing_product_card', locals: { product: @product_vivieu.reviewfiable} %>
  <% else %>
      <%= render partial: 'product_vivieus/partials/product_form', locals: { product: @product_vivieu.reviewfiable} %>
  <% end %>
</div> -->
          <!--
          <div class="col s5 input-field">
          <%= f.text_field :youtube_url %>
          <%= f.label :youtube_url, 'YouTube Video ID' %>
        </div> -->


        <!-- <div class="row">
          <div class="switch">
            <label>
              Other Affiliate Program
              <input type="checkbox" <%= 'checked' if @product_vivieu.affiliate_category? %> id="affiliate_category">
              <span class="lever"></span>
              Amazon Affiliate Program
            </label>
          </div>
        </div>

        <div class="affiliate_options">
          <div class="if-amazon">
            <%= render partial: 'product_vivieus/partials/if_amazon', locals:{ f: f }%>
          </div>
          <div class="if-not-amazon">
            <%= render partial: 'product_vivieus/partials/if_not_amazon', locals:{ f: f}  %>
          </div>

        </div>



    <% end %> -->




  <div id="amazon-modal" class="modal">
    <div class="modal-content">
      <%= render partial: 'product_vivieus/partials/amazon_product_form', locals: { id: @product_vivieu.id} %>
    </div>
  </div>
</div>

<script type="text/javascript" charset="utf-8">
  <% if @product_vivieu.affiliate_category %>
  $('.if-not-amazon').hide()
  <% else %>
  $('.if-amazon').hide();
  <% end %>

  $('#affiliate_category').on('click', function()
  {
    var checkbox = document.getElementById('affiliate_category');
    if(checkbox.checked)
    {
      toastr.success('Your preference has been updated to Amazon affiliates !', 'Success')
      save_review_form();
      $('.if-not-amazon').fadeOut(200, function(){
        $('.if-amazon').fadeIn(200);
      })
      $.ajax({
        method: 'PATCH',
        url: 'http://localhost:3000/product_vivieus/<%= @product_vivieu.id %>/affiliate_category',
        data: { affiliate: 'Amazon'}
      })
    }
    else
    {
      toastr.success('Your preference has been updated', 'Success')
      Turbolinks.visit(location.toString());
      $('.if-amazon').fadeOut(200, function(){
        $('.if-not-amazon').fadeIn(200);
      })
      $.ajax({
        method: 'PATCH',
        url: 'http://localhost:3000/product_vivieus/<%= @product_vivieu.id %>/affiliate_category',
        data: { affiliate: 'Other'}
      })
    }
  });

  $(".youtube-button").on('click', function(){
    $('.append-modal').html("<%= j render partial: 'product_vivieus/partials/youtube_modal',
       locals: { product_vivieu: @product_vivieu } %>")

  });

  $('.modal-trigger-youtube').leanModal({
    ready: function () {
      $.ajax({
        url: '/product_vivieus/<%= @product_vivieu.id %>/youtube_videos',
        dataType: 'json',
        method: 'GET',
        beforeSend: function() {
          $('.youtube-videos').html('<h3 class="flow-text center">Videos loading ...</h3>');
        },
        success: function (data) {
          $('.youtube-videos').empty().append('<input type="text" class="text-input" placeholder="Filter results" id="filter" value="" />');
          for(var i = 0; i < data.youtube_videos.length; i++)
          {
            $('.youtube-videos').append("<li class='titles flow-text' data-id='"+ data.youtube_videos[i].id +"'>"+ data.youtube_videos[i].title +"<span class='badge badge-click blue white-text' data-badge-caption=''>Add</span></li>");
          }
          live_search();
          badge_click();
        },
        timeout: 15000,
        error: function(jqXHR, textStatus, errorThrown) {
          if(textStatus==="timeout") {
            $('.youtube-videos').empty().append('<h3 class="flow-text center red">Looks like there was a connection timeout.' +
                ' Try again or put the YouTube ID manually'+'</h3>');
          }
        }
      });
    }
  });

  function live_search(){
    $("#filter").keyup(function(){
      // Retrieve the input field text and reset the count to zero
      var filter = $(this).val(), count = 0;

      // Loop through the comment list
      $(".titles").each(function(){

        // If the list item does not contain the text phrase fade it out
        if ($(this).text().search(new RegExp(filter, "i")) < 0) {
          $(this).fadeOut();

          // Show the list item if the phrase matches and increase the count by 1
        } else {
          $(this).show();
          count++;
        }
      });

      // Update the count
      var numberItems = count;
      $("#filter-count").text("Number of Comments = "+count);
    });
  }

  function badge_click()
  {
    $('.badge-click').css('cursor', 'pointer');
    $('.badge-click').on('click', function(){
      $('#review_youtube_url').val($(this).parent().data('id'))
      Materialize.updateTextFields();
      $('#youtube-videos-modal').closeModal();
    });
  }

</script>
<script type="text/javascript" charset="utf-8">
  function search_script()
  {
    var products = new Bloodhound({
      datumTokenizer: Bloodhound.tokenizers.obj.whitespace,
      queryTokenizer: Bloodhound.tokenizers.whitespace,
      remote: {
        url: 'http://localhost:3000/product_vivieus/autocomplete?query=%QUERY',
        wildcard: '%QUERY'
      }
    });

    products.initialize();

    $('#query').materialtags({
      maxTags: 1,
      itemValue: 'id',
      itemText: 'title',
      typeaheadjs: {
        hint: true,
        highlight: true,
        minLength: 1,
        name: 'title',
        displayKey: 'title',
        source: products.ttAdapter()
      }
    });
    $('#query').on('itemAdded', function(event) {
      $('.add-button-insert').html('<a class="waves-effect waves-light add-product-btn btn" onclick="add_product()">Add Product</a>');
    });
    $('#query').on('itemRemoved', function(event) {
      $('.add-button-insert').empty();
    });
  }

  search_script();


  function add_product(){
    var product_id = $('#query').val();
    $.ajax({
      method: 'POST',
      url: "http://localhost:3000/product_vivieus/<%= @product_vivieu.id %>/add_product",
      data: { product_id: product_id },
      success: function(data){
        var product_array = [];
        product_array.push('<div class="card-panel teal"><span>')
        product_array.push('<h2 class="center">'+ data.title +'</h2>')
        var first_image = data.product_images.split(',')[0];
        product_array.push('<img class="responsive-img" src="'+ first_image +'">');
        product_array.push('<a class="waves-effect waves-light red btn" onclick="show_product_form()">Wrong Product ?</a>')
        product_array.push('</span></div>');
        $('.product-card').fadeOut(1000, function(){
          var card = product_array.join('');
          $(this).html(card).fadeIn();
        })
      },
      error: function(data){
        console.log(data)
      }
    })
  }

  function show_product_form()
  {
    $('.product-card').fadeOut(200, function(){
      $(this).html('<%= j render partial: 'product_vivieus/partials/product_form', locals: { product: @product_vivieu.reviewfiable} %>').fadeIn(500);
      search_script();
    })
  }

  function amazon_modal()
  {
    $('#amazon-modal').openModal();
  }

  function close_amazon_modal()
  {
    $('#amazon-modal').closeModal();
  }

  function publish_review_form() {
    var valuesToSubmit = $('.review-form').serialize();
    $.ajax({
      method: 'POST',
      url: 'http://localhost:3000/product_vivieus/<%= @product_vivieu.id %>/publish',
      data:  valuesToSubmit ,
      beforeSend: function(){
        $('.publish_review_form').text('Publishing...')
      },
      success: function(){
        toastr.success('Your review is now live !', 'Success')
        $('.publish-buttons').fadeOut(200, function () {
          $(this).html('<%= link_to 'Unpublish Review', unpublish_product_vivieu_path(@product_vivieu), method: :post, class: 'waves btn red white-text' %>').fadeIn(200)
        })
      },
      error: function(jqXHR, textStatus, errorThrown){
        $('.publish_review_form').text('Publish')
        if(textStatus==="timeout") {
          toastr.error('Please check your internet connection or try again','Error')
        }
        else {
          var errors = ['<ol>'];
          var error_array = jqXHR.responseText.substring(1, jqXHR.responseText.length - 1).split(',')
          for(var i = 0; i < error_array.length; i++)
          {
            errors.push('<li>'+ error_array[i] +'</li>')
          }
          $('#review-error-messages').html(errors.join(''))
          toastr.error('Please check for errors in the error panel','Error')
        }
      },
      timeout: 10000
    })
  }

    function save_review_form()
    {
      var valuestosubmit = $('.review-form').serialize() + '&submit_method=ajax';
      $.ajax({
        method: 'PATCH',
        url: 'http://localhost:3000/product_vivieus/<%= @product_vivieu.id %>',
        data: valuestosubmit,
        dataType: 'json',
        error: function(jqXHR, textStatus, errorThrown){
          if(textStatus==="timeout") {
            toastr.error('Could not save the form. Please check your internet connection', 'Error')
          }
          else{
            toastr.error('Your form was not saved', 'Error')
          }
        },
        timeout: 10000
      })
    }

</script>
<script type="text/javascript" charset="utf-8">
  var citynames = new Bloodhound({
    datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
    queryTokenizer: Bloodhound.tokenizers.whitespace,
    prefetch: {
      /*Todo change to vivieu in production*/
      url: 'http://localhost:3000/assets/affiliate_countries.json',
      filter: function(list) {
        return $.map(list, function(cityname) {
          return { name: cityname };
        });
      }
    }
  });

  citynames.initialize();

  $('#review_target_countries').materialtags({
    freeInput: false,
    typeaheadjs: {
      name: 'affiliate_countries',
      displayKey: 'name',
      valueKey: 'name',
      source: citynames.ttAdapter()
    }
  });

</script>
